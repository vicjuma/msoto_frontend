{"ast":null,"code":"import AuthService from '../../services/AuthService';\nimport { setCurrentUser, registerSuccess, logoutUser, getErrors } from \"./actionCreators\";\n/**\n * Login user action\n */\n\nexport var loginUser = function loginUser(state, history) {\n  return function (dispatch) {\n    AuthService.login(state.email, state.password).then(function (resp) {\n      if (resp.data.success) {\n        dispatch(setCurrentUser(resp.data.profile));\n        AuthService.saveToken(resp.data.token);\n        history.push('/');\n      }\n    }).catch(function (error) {\n      if (error.response.data) {\n        dispatch(getErrors({\n          loginError: error.response.data.error\n        }));\n      }\n    });\n  };\n};\n/**\n * Logout action\n */\n\nexport var logout = function logout(history) {\n  return function (dispatch) {\n    AuthService.logout();\n    dispatch(logoutUser());\n    history.push('/');\n    window.location.reload();\n  };\n};\n/**\n * Register user action\n */\n\nexport var registerUser = function registerUser(data, history) {\n  return function (dispatch) {\n    AuthService.register(data).then(function (resp) {\n      if (resp.data.success) {\n        dispatch(registerSuccess());\n        history.push('/login');\n      }\n    }).catch(function (error) {\n      if (error.response.data) {\n        dispatch(getErrors({\n          registerError: error.response.data.error\n        }));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/realoj/RealProjects/react-redux-login-registration-example/src/store/actions/auth.js"],"names":["AuthService","setCurrentUser","registerSuccess","logoutUser","getErrors","loginUser","state","history","dispatch","login","email","password","then","resp","data","success","profile","saveToken","token","push","catch","error","response","loginError","logout","window","location","reload","registerUser","register","registerError"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,4BAAxB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,UAA1C,EAAsDC,SAAtD,QAAuE,kBAAvE;AAEA;;;;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,OAAR;AAAA,SAAoB,UAAAC,QAAQ,EAAI;AACvDR,IAAAA,WAAW,CAACS,KAAZ,CAAkBH,KAAK,CAACI,KAAxB,EAA+BJ,KAAK,CAACK,QAArC,EAA+CC,IAA/C,CAAoD,UAAAC,IAAI,EAAI;AAC1D,UAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrBP,QAAAA,QAAQ,CAACP,cAAc,CAACY,IAAI,CAACC,IAAL,CAAUE,OAAX,CAAf,CAAR;AACAhB,QAAAA,WAAW,CAACiB,SAAZ,CAAsBJ,IAAI,CAACC,IAAL,CAAUI,KAAhC;AACAX,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACD;AACF,KAND,EAMGC,KANH,CAMS,UAAAC,KAAK,EAAI;AAChB,UAAIA,KAAK,CAACC,QAAN,CAAeR,IAAnB,EAAyB;AACvBN,QAAAA,QAAQ,CAACJ,SAAS,CAAC;AACjBmB,UAAAA,UAAU,EAAEF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBO;AADf,SAAD,CAAV,CAAR;AAGD;AACF,KAZD;AAaD,GAdwB;AAAA,CAAlB;AAgBP;;;;AAGA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,CAACjB,OAAD;AAAA,SAAa,UAAAC,QAAQ,EAAI;AAC7CR,IAAAA,WAAW,CAACwB,MAAZ;AACAhB,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACAI,IAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACAM,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GALqB;AAAA,CAAf;AAOP;;;;AAGA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACd,IAAD,EAAOP,OAAP;AAAA,SAAmB,UAAAC,QAAQ,EAAI;AACzDR,IAAAA,WAAW,CAAC6B,QAAZ,CAAqBf,IAArB,EAA2BF,IAA3B,CAAgC,UAAAC,IAAI,EAAI;AACtC,UAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrBP,QAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACAK,QAAAA,OAAO,CAACY,IAAR,CAAa,QAAb;AACD;AACF,KALD,EAKGC,KALH,CAKS,UAAAC,KAAK,EAAI;AAChB,UAAIA,KAAK,CAACC,QAAN,CAAeR,IAAnB,EAAyB;AACvBN,QAAAA,QAAQ,CAACJ,SAAS,CAAC;AACjB0B,UAAAA,aAAa,EAAET,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBO;AADlB,SAAD,CAAV,CAAR;AAGD;AACF,KAXD;AAYD,GAb2B;AAAA,CAArB","sourcesContent":["import AuthService from '../../services/AuthService';\nimport { setCurrentUser, registerSuccess, logoutUser, getErrors } from \"./actionCreators\";\n\n/**\n * Login user action\n */\nexport const loginUser = (state, history) => dispatch => {\n  AuthService.login(state.email, state.password).then(resp => {\n    if (resp.data.success) {\n      dispatch(setCurrentUser(resp.data.profile));\n      AuthService.saveToken(resp.data.token);\n      history.push('/');\n    }\n  }).catch(error => {\n    if (error.response.data) {\n      dispatch(getErrors({\n        loginError: error.response.data.error\n      }));\n    }\n  });\n}\n\n/**\n * Logout action\n */\nexport const logout = (history) => dispatch => {\n  AuthService.logout();\n  dispatch(logoutUser());\n  history.push('/')\n  window.location.reload();\n}\n\n/**\n * Register user action\n */\nexport const registerUser = (data, history) => dispatch => {\n  AuthService.register(data).then(resp => {\n    if (resp.data.success) {\n      dispatch(registerSuccess());\n      history.push('/login');\n    }\n  }).catch(error => {\n    if (error.response.data) {\n      dispatch(getErrors({\n        registerError: error.response.data.error\n      }));\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}